class Person
    insert data variables (instance variables): int ID, int movieBorrowed
    String first name, String last name, int age, String phone number, int money owed
    
    constructor Person(id int, fname String, lname String, age int, phone String) 
        
    method testPhone(phone String, s String) returns boolean
       if(characters in phone number equals 10 and (first 3 characters equal 514 or 438)
            phone number (instance variable) equals phone
            print "Valid phone number"
            return true
       else
            print "Invalid phone number" 
            return false
        
    getters 
    
    setters 
        
    method toString return String
        return: "ID: " + ID
                "Name: " + first name + last name
                "Phone number: " + phone number
                "Money owed: " + money owed
   
class Student extends Person
    insert data variables (instance variables): String school name, int grade

    constructor Student(fname String, lname String, school String, grade int)
        
    method testGrade(g int) return boolean
        if(g is more or equal to 0 and g is less or equal to 100)
            grade (instance variable) equals g
            print "Valid grade"
            return true
        else
            print "Invalid grade"
            return fase
            
    getters 
    
    setters 
    
    method setStatus() void
        status equals "Student"
    
    method toString return String
        return toString from super
               "School name: " + school name
               "Grade: " + grade
               
    
class External_Member extends Person
    insert data variables (instance variables): String job, String organization

    constructor External_Member(fname String, lname String, j String, org String)
            
    getters 
    
    setters 
    
    method setStatus() void
        status equals "External Member"
    
    method toString return String
        return toString from super
               "Job name: " + job
               "Organization: " + organization


class Movie
    insert data variables (instance variables): String title of movie, String producer, 
    int movie ID equals 1, int year of release, String availability, Date rent date
    
    constructor Movie(String title, String prod, int id, int year)
        
    method testYear(int year) return boolean 
        if(year less or equals 2023 and year more or equals 1895) //release year of the first movie
            year of release equals year
            print "Valid year"
            return true
        else
            print "Invalid year"
            return false
        
    getters 
    
    setters 
    
    method toString returns String
        return "Movie ID: " + movie ID
               "Movie title: " + title of movie
               "Producer: " + producer
               "Release year: " + year of release
               "Availability: " + availability


class Interface
    method calculate(rent: Date, return: Date, String status) returns int
        int total days equals return - rent (return = returnDate, rent = rentDate)
        initialize the cost int
        if status equals "Student"
                return (total days - 7) multiplied by 1 + 5
        if status equals "External member" 
                return (total days - 7) multiplied by 2 + 10
                
                

main class Driver
    instantiate scanner
    instantiate the ArrayLists for Movie, Student and External_Member classes
    instantiate boolean flag and set to true
    
    //menu
    while flag is true
    print "Choose your option: 
            1 - Enter a new movie into the system.
            2 - Enter a new person into the system.
            3 - Show all the movies.
            4 - Show all the members.
            5 - Borrow movie.
            6 - Return movie.
            7 - Exit.
            Enter your choice: 
    input your choice
    implement switch for choice
            case 1: print "Enter the movie ID: " 
                    input the ID
                    instantiate flag2 and set to true
                    for loop passing through the Movie ArrayList
                            if the ID is same as the ID in the loop
                                    print "Movie already in the system"
                                    set flag2 to false
                    if flag2 equals false
                            continue
                    print all the instructions and enter the fields necessary for movie (title, producer, release year)
                    test the year using the testYear method
                    if testYear returns false
                            continue
                    instantiate the Movie object in the ArrayList and add insert all the values in the constructor 
                    set avaialbility to "Available"
                    print "The movie has been added"
                    break
             
            case 2: print "Enter the person ID: " 
                    input the ID
                    instantiate flag2 and set to true
                    for loop passing through the Student ArrayList
                            if the ID is same as the ID in the loop
                                    print "Student already in the system"
                                    set flag2 to false
                    for loop passing through the External_Member ArrayList
                            if the ID is same as the ID in the loop
                                    print "Member already in the system"
                                    set flag2 to false
                    if flag2 equals false
                            continue
                    print "Enter occupation: 1 - Student 2 - External_Member"
                    if choose 1
                            print all the instructions and enter the fields necessary for Student (fname, lname, age, school, grade, phone)
                            use testPhone method to test the phone number. If return false, continue;
                            instantiate the Student object in the ArrayList and add insert all the values in the constructor
                            use setStatus method to set status to "Student"
                            print "Student added to the system"
                    if choose 2
                            print all the instructions and enter the fields necessary for External_Member (fname, lname, age, org, job, phone)
                            use testPhone method to test the phone number. If return false, continue;
                            instantiate the External_Member object in the ArrayList and add insert all the values in the constructor
                            use setStatus method to set status to "External Member"
                            print "ExternalMember added to the system"
                    break;
                    
            case 3: print "View of all the movies: "
                    for loop that goes through the movie ArrayList
                            get toString method for each movie to print the information needed
                    break;
                    
            case 4: print "View of all the members: "
                    for loop that goes through the Student ArrayList
                            get toString method for each student to print the information needed
                    for loop that goes through the External_Member ArrayList
                            get toString method for each External_Member to print the information needed
                    break;
                    
            case 5: print "Enter the ID of the person borrowing: "
                    input the ID
                    print "Enter the movie ID: "
                    if movie avaialability equals "unavailable"
                            print "Movie unavailable"
                    for loop that goes through the Student ArrayList
                            if ID of student equals ID entered and movie availability equals "Avaialble"
                                    add ID of the movie to the movieBorrowed field of the Student
                                    insert current date into the Date rent field of the movie
                                    insert "Unavailable" into the availability field of the movie
                    for loop that goes through the External_Member ArrayList
                            if ID of External_Member equals ID entered and movie availability equals "Avaialble"
                                    add ID of the movie to the movieBorrowed field of the External_Member
                                    insert current date into the Date rent field of the movie
                                    insert "Unavailable" into the availability field of the movie
                    break;
                                    
            case 6: print "Enter the ID of the person returning: "
                    input the ID
                    for loop that goes through the Student ArrayList
                            if ID of student equals ID entered and field movie borrowed does not equal null
                                    instantiate interface with date borrowed, date returned, and status of the member
                                    get the price and insert it into the money field of the Student
                                    set date borrowed and date returned as null. set movie borrowed as null
                                    set availability of movie as "Available" 
                    for loop that goes through the External_Member ArrayList
                            if ID of External_Member equals ID entered and movie availability equals "Avaialble"
                                    instantiate interface with date borrowed, date returned, and status of the member
                                    get the price and insert it into the money field of the External_Member
                                    set date borrowed and date returned as null. set movie borrowed as null
                                    set availability of movie as "Available" 
                    break;
                    
            case 7: print "Exited the menu"
                    set flag equals false
                    break;
